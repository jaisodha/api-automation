[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-07-07T05:11:58.333Z",
        "before": [
          {
            "result": {
              "duration": 772449000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          },
          {
            "result": {
              "duration": 2030446000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.before(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "verify if user is able to book a ride using coupon",
        "description": "",
        "id": "verify-if-a-user-is-able-to-book--reschedule-and-cancel-a-ride;verify-if-user-is-able-to-book-a-ride-using-coupon",
        "after": [
          {
            "result": {
              "duration": 16440000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"subCta\" (class pojo.Cta), not marked as ignorable (2 known properties: \"title\", \"type\"])\n at [Source: (String)\"{\"cached\": false, \"data\": {\"cta\": \"RESERVE A SEAT\", \"inactiveCta\": \"BUY A NEW PASS\", \"routes\": [{\"bufferTime\": 100000, \"drop_stop_title\": \"Drop\", \"fromLoc\": {\"id\": \"5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4\", \"lat\": 28.58368506583371, \"lng\": 77.21241725488308, \"name\": \"SF Airport\", \"pickupPointTagDatas\": []}, \"futureSlots\": [], \"isActive\": true, \"isNotificationEnabled\": false, \"journeyTime\": 300.0, \"journeyTimeText\": \"0.08333333333333333 hours \", \"moreShuttlsInfoMessage\": \"These are approximate times\"[truncated 24696 chars]; line: 1, column: 1139] (through reference chain: pojo.CombinedSlots[\"data\"]-\u003epojo.CsData[\"routes\"]-\u003ejava.util.ArrayList[0]-\u003epojo.routes[\"slots\"]-\u003ejava.util.ArrayList[0]-\u003epojo.slots[\"cta\"]-\u003epojo.Cta[\"subCta\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:840)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1192)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1592)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1570)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:286)\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)\n\tat com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:286)\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)\n\tat com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)\n\tat com.fasterxml.jackson.databind.ObjectMapper$readValue$2.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135)\n\tat io.restassured.internal.path.json.mapping.JsonPathJackson2ObjectDeserializer.deserialize(JsonPathJackson2ObjectDeserializer.groovy:46)\n\tat io.restassured.path.json.mapping.JsonPathObjectDeserializer$deserialize.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)\n\tat io.restassured.internal.mapping.Jackson2Mapper.deserialize(Jackson2Mapper.groovy:58)\n\tat io.restassured.mapper.ObjectMapper$deserialize$0.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)\n\tat io.restassured.internal.mapping.ObjectMapping.parseWithJackson2(ObjectMapping.groovy:221)\n\tat io.restassured.internal.mapping.ObjectMapping$parseWithJackson2$1.callStatic(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:196)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:216)\n\tat io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:58)\n\tat io.restassured.internal.mapping.ObjectMapping$deserialize$0.call(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:224)\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)\n\tat steps.Booking.getTripId(Booking.java:43)\n\tat steps.Booking.aUserCallHttpsRequestForWith(Booking.java:61)\n\tat âœ½.A user call \"POST\" https request for \"/v3/booking/create\" with(file:///Users/admin/Desktop/restAssured/src/test/java/features/booking.feature:5)\n",
              "duration": 2674586000,
              "status": "failed"
            },
            "line": 5,
            "name": "A user call \"POST\" https request for \"/v3/booking/create\" with",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 12
                },
                {
                  "val": "\"/v3/booking/create\"",
                  "offset": 37
                }
              ],
              "location": "steps.Booking.aUserCallHttpsRequestForWith(java.lang.String,java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "couponId",
                  "fromId",
                  "toId"
                ]
              },
              {
                "cells": [
                  "b27aae6d-66ca-4d49-b6c5-31bbc1689d54",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4",
                  "c8894713-07a8-4bb0-bb49-219f545bc377"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46000,
              "status": "skipped"
            },
            "line": 8,
            "name": "User should get successful response with message \"Your ride has been confirmed\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Your ride has been confirmed\"",
                  "offset": 49
                }
              ],
              "location": "steps.Booking.userShouldGetSuccessfulResponseWithMessage(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@booking"
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:03.980Z",
        "before": [
          {
            "result": {
              "duration": 3994000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 10,
        "name": "verify if booking card is visible to user on home screen",
        "description": "",
        "id": "verify-if-a-user-is-able-to-book--reschedule-and-cancel-a-ride;verify-if-booking-card-is-visible-to-user-on-home-screen",
        "after": [
          {
            "result": {
              "duration": 321000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 637445000,
              "status": "passed"
            },
            "line": 11,
            "name": "A user call \"GET\" https request for \"/api/v3/home_cards\" to fetch all cards",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 12
                },
                {
                  "val": "\"/api/v3/home_cards\"",
                  "offset": 36
                }
              ],
              "location": "steps.Booking.aUserCallHttpsRequestForToFetchAllCards(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 91061000,
              "status": "passed"
            },
            "line": 12,
            "name": "User should get booking card if he has active booking",
            "match": {
              "location": "steps.Booking.userShouldGetBookingCardIfHeHasActiveBooking()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:04.727Z",
        "before": [
          {
            "result": {
              "duration": 3469000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 14,
        "name": "verify if user is able to reschedule his ride",
        "description": "",
        "id": "verify-if-a-user-is-able-to-book--reschedule-and-cancel-a-ride;verify-if-user-is-able-to-reschedule-his-ride",
        "after": [
          {
            "result": {
              "duration": 157000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 411918000,
              "status": "passed"
            },
            "line": 15,
            "name": "Given user call \"GET\" https request for \"/v4/routes/combinedSlots\" with below payload for reschedulable",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 16
                },
                {
                  "val": "\"/v4/routes/combinedSlots\"",
                  "offset": 40
                }
              ],
              "location": "steps.Booking.givenUserCallHttpsRequestForWithBelowPayloadForReschedulable(java.lang.String,java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "fromLat",
                  "fromLng",
                  "toLat",
                  "toLng",
                  "fromLocId",
                  "toLocId",
                  "routeId"
                ]
              },
              {
                "cells": [
                  "28.58368506583371",
                  "77.21241725488308",
                  "28.56636061941184",
                  "77.20755711353199",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4",
                  "c8894713-07a8-4bb0-bb49-219f545bc377",
                  "4a2a0e8d-ee20-4cf8-9827-94e8f52c4af3"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"message\" (class pojo.RescheduleSlots), not marked as ignorable (3 known properties: \"cached\", \"success\", \"data\"])\n at [Source: (String)\"{\"message\": \"Invalid query_params: expected int (path \\\"boardingTime\\\")\"}\"; line: 1, column: 14] (through reference chain: pojo.RescheduleSlots[\"message\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:840)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1192)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1592)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1570)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)\n\tat com.fasterxml.jackson.databind.ObjectMapper$readValue$2.call(Unknown Source)\n\tat io.restassured.internal.path.json.mapping.JsonPathJackson2ObjectDeserializer.deserialize(JsonPathJackson2ObjectDeserializer.groovy:46)\n\tat io.restassured.path.json.mapping.JsonPathObjectDeserializer$deserialize.call(Unknown Source)\n\tat io.restassured.internal.mapping.Jackson2Mapper.deserialize(Jackson2Mapper.groovy:58)\n\tat io.restassured.mapper.ObjectMapper$deserialize$0.call(Unknown Source)\n\tat io.restassured.internal.mapping.ObjectMapping.parseWithJackson2(ObjectMapping.groovy:221)\n\tat io.restassured.internal.mapping.ObjectMapping$parseWithJackson2$1.callStatic(Unknown Source)\n\tat io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:58)\n\tat io.restassured.internal.mapping.ObjectMapping$deserialize$0.call(Unknown Source)\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:224)\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)\n\tat steps.Booking.userShouldGetABookableSlot(Booking.java:110)\n\tat âœ½.User should get a bookable slot(file:///Users/admin/Desktop/restAssured/src/test/java/features/booking.feature:18)\n",
              "duration": 21763000,
              "status": "failed"
            },
            "line": 18,
            "name": "User should get a bookable slot",
            "match": {
              "location": "steps.Booking.userShouldGetABookableSlot()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 298000,
              "status": "skipped"
            },
            "line": 19,
            "name": "If user call \"POST\" https request for \"/v3/booking/create\" with reschedule create booking call",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 13
                },
                {
                  "val": "\"/v3/booking/create\"",
                  "offset": 38
                }
              ],
              "location": "steps.Booking.ifUserCallHttpsRequestForWithRescheduleCreateBookingCall(java.lang.String,java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "couponId",
                  "fromId",
                  "toId"
                ]
              },
              {
                "cells": [
                  "b27aae6d-66ca-4d49-b6c5-31bbc1689d54",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4",
                  "c8894713-07a8-4bb0-bb49-219f545bc377"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41000,
              "status": "skipped"
            },
            "line": 22,
            "name": "User should get successful response with message \"Your ride has been confirmed\" and parent booking status should be \"POSTPONED\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Your ride has been confirmed\"",
                  "offset": 49
                },
                {
                  "val": "\"POSTPONED\"",
                  "offset": 116
                }
              ],
              "location": "steps.Booking.userShouldGetSuccessfulResponseWithMessageAndParentBookingStatusShouldBe(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:05.191Z",
        "before": [
          {
            "result": {
              "duration": 5765000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 24,
        "name": "verify if user is able to cancel his ride",
        "description": "",
        "id": "verify-if-a-user-is-able-to-book--reschedule-and-cancel-a-ride;verify-if-user-is-able-to-cancel-his-ride",
        "after": [
          {
            "result": {
              "duration": 192000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 335660000,
              "status": "passed"
            },
            "line": 25,
            "name": "A user call \"POST\" https request for \"/v3/booking/cancel\" to cancel his ride",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 12
                },
                {
                  "val": "\"/v3/booking/cancel\"",
                  "offset": 37
                }
              ],
              "location": "steps.Booking.aUserCallHttpsRequestForToCancelHisRide(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)\n\tat io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)\n\tat io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:202)\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\n\tat steps.Booking.userShouldGetHisBookingStatusAs(Booking.java:162)\n\tat âœ½.User should get his bookingStatus as \"CANCELLED\"(file:///Users/admin/Desktop/restAssured/src/test/java/features/booking.feature:26)\nCaused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading \u0027\u003c\u0027, no possible valid JSON value or punctuation could be recognized.\n\tat groovy.json.JsonLexer.nextToken(JsonLexer.java:86)\n\tat groovy.json.JsonLexer$nextToken.call(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)\n\tat io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)\n\tat io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)\n\tat io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:202)\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\n\tat steps.Booking.userShouldGetHisBookingStatusAs(Booking.java:162)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:27)\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27)\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:49)\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:51)\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:66)\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:149)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:83)\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:24)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:185)\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:83)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:219)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n\tat org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n\tat org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\n",
              "duration": 1469000,
              "status": "failed"
            },
            "line": 26,
            "name": "User should get his bookingStatus as \"CANCELLED\"",
            "match": {
              "arguments": [
                {
                  "val": "\"CANCELLED\"",
                  "offset": 37
                }
              ],
              "location": "steps.Booking.userShouldGetHisBookingStatusAs(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify if a user is able to book, reschedule and cancel a ride",
    "description": "  Description: The purpose of this feature is to test that if a user has coupon \u0026 bookable slot then he should able to book a ride",
    "id": "verify-if-a-user-is-able-to-book--reschedule-and-cancel-a-ride",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/booking.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-07-07T05:12:05.555Z",
        "before": [
          {
            "result": {
              "duration": 5261000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 9,
        "name": "verify if user is successfully able to generate the OTP",
        "description": "",
        "id": "validating-the-app-login-flows;verify-if-user-is-successfully-able-to-generate-the-otp;;2",
        "after": [
          {
            "result": {
              "duration": 277000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1295394000,
              "status": "passed"
            },
            "line": 5,
            "name": "Given user call \"POST\" https request for \"/v3/auth/user/otp\" with \"true\" and \"9555814581\" and \"true\" body",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 16
                },
                {
                  "val": "\"/v3/auth/user/otp\"",
                  "offset": 41
                },
                {
                  "val": "\"true\"",
                  "offset": 66
                },
                {
                  "val": "\"9555814581\"",
                  "offset": 77
                },
                {
                  "val": "\"true\"",
                  "offset": 94
                }
              ],
              "location": "steps.login.givenUserCallHttpsRequestForWithAndAndBody(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11181000,
              "status": "passed"
            },
            "line": 6,
            "name": "I should see the success key value as \"true\" in the API response",
            "match": {
              "arguments": [
                {
                  "val": "\"true\"",
                  "offset": 38
                }
              ],
              "location": "steps.login.iShouldSeeTheSuccessKeyValueAsInTheAPIResponse(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@login"
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:06.889Z",
        "before": [
          {
            "result": {
              "duration": 3816000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 10,
        "name": "verify if user is successfully able to generate the OTP",
        "description": "",
        "id": "validating-the-app-login-flows;verify-if-user-is-successfully-able-to-generate-the-otp;;3",
        "after": [
          {
            "result": {
              "duration": 146000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 271667000,
              "status": "passed"
            },
            "line": 5,
            "name": "Given user call \"POST\" https request for \"/v3/auth/user/otp\" with \"false\" and \"9555814581\" and \"true\" body",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 16
                },
                {
                  "val": "\"/v3/auth/user/otp\"",
                  "offset": 41
                },
                {
                  "val": "\"false\"",
                  "offset": 66
                },
                {
                  "val": "\"9555814581\"",
                  "offset": 78
                },
                {
                  "val": "\"true\"",
                  "offset": 95
                }
              ],
              "location": "steps.login.givenUserCallHttpsRequestForWithAndAndBody(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14204000,
              "status": "passed"
            },
            "line": 6,
            "name": "I should see the success key value as \"true\" in the API response",
            "match": {
              "arguments": [
                {
                  "val": "\"true\"",
                  "offset": 38
                }
              ],
              "location": "steps.login.iShouldSeeTheSuccessKeyValueAsInTheAPIResponse(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@login"
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:07.232Z",
        "before": [
          {
            "result": {
              "duration": 2630000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 16,
        "name": "verify if user is successfully login into the app with json validations",
        "description": "",
        "id": "validating-the-app-login-flows;verify-if-user-is-successfully-login-into-the-app-with-json-validations;;2",
        "after": [
          {
            "result": {
              "duration": 138000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 788611000,
              "status": "passed"
            },
            "line": 13,
            "name": "Given user call \"POST\" https request for \"/v3/auth/user\" with \u0027SHUTTL\u0027 and \u0027true\u0027 and \u0027true\u0027 and \u00271337\u0027 and \u00279555814581\u0027 and \u0027true\u0027 body",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 16
                },
                {
                  "val": "\"/v3/auth/user\"",
                  "offset": 41
                },
                {
                  "val": "\u0027SHUTTL\u0027",
                  "offset": 62
                },
                {
                  "val": "\u0027true\u0027",
                  "offset": 75
                },
                {
                  "val": "\u0027true\u0027",
                  "offset": 86
                },
                {
                  "val": "\u00271337\u0027",
                  "offset": 97
                },
                {
                  "val": "\u00279555814581\u0027",
                  "offset": 108
                },
                {
                  "val": "\u0027true\u0027",
                  "offset": 125
                }
              ],
              "location": "steps.login.given_user_call_https_request_for_with_and_and_and_and_and_body(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:08.034Z",
        "before": [
          {
            "result": {
              "duration": 4416000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 17,
        "name": "verify if user is successfully login into the app with json validations",
        "description": "",
        "id": "validating-the-app-login-flows;verify-if-user-is-successfully-login-into-the-app-with-json-validations;;3",
        "after": [
          {
            "result": {
              "duration": 152000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 811184000,
              "status": "passed"
            },
            "line": 13,
            "name": "Given user call \"POST\" https request for \"/v3/auth/user\" with \u0027SHUTTL\u0027 and \u0027false\u0027 and \u0027true\u0027 and \u00271337\u0027 and \u00279555814581\u0027 and \u0027true\u0027 body",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 16
                },
                {
                  "val": "\"/v3/auth/user\"",
                  "offset": 41
                },
                {
                  "val": "\u0027SHUTTL\u0027",
                  "offset": 62
                },
                {
                  "val": "\u0027false\u0027",
                  "offset": 75
                },
                {
                  "val": "\u0027true\u0027",
                  "offset": 87
                },
                {
                  "val": "\u00271337\u0027",
                  "offset": 98
                },
                {
                  "val": "\u00279555814581\u0027",
                  "offset": 109
                },
                {
                  "val": "\u0027true\u0027",
                  "offset": 126
                }
              ],
              "location": "steps.login.given_user_call_https_request_for_with_and_and_and_and_and_body(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:08.872Z",
        "before": [
          {
            "result": {
              "duration": 3955000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 25,
        "name": "verify if user is successfully registered himself in the shuttl app",
        "description": "",
        "id": "validating-the-app-login-flows;verify-if-user-is-successfully-registered-himself-in-the-shuttl-app;;2",
        "after": [
          {
            "result": {
              "duration": 263000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 621541000,
              "status": "passed"
            },
            "line": 21,
            "name": "user call \"POST\" https request for \"/v3/auth/confirmRegister\" with \u0027jaisinghsodha27@gmail.com\u0027 and \u0027MALE\u0027 and \u002728.630950927734375\u0027 and \u002777.21727752685547\u0027 and \u0027Dwarka+Sector+21+metro+station%2C+New+Delhi%2C+Delhi\u0027 and \u0027jai singh sodha\u0027 and \u002728.4118006\u0027 and \u002777.0419318\u0027 and \u0027CD+Chowk%2C+Sector+48%2C+Gurugram%2C+Haryana+122004%2C+India\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 10
                },
                {
                  "val": "\"/v3/auth/confirmRegister\"",
                  "offset": 35
                },
                {
                  "val": "\u0027jaisinghsodha27@gmail.com\u0027",
                  "offset": 67
                },
                {
                  "val": "\u0027MALE\u0027",
                  "offset": 99
                },
                {
                  "val": "\u002728.630950927734375\u0027",
                  "offset": 110
                },
                {
                  "val": "\u002777.21727752685547\u0027",
                  "offset": 135
                },
                {
                  "val": "\u0027Dwarka+Sector+21+metro+station%2C+New+Delhi%2C+Delhi\u0027",
                  "offset": 159
                },
                {
                  "val": "\u0027jai singh sodha\u0027",
                  "offset": 218
                },
                {
                  "val": "\u002728.4118006\u0027",
                  "offset": 240
                },
                {
                  "val": "\u002777.0419318\u0027",
                  "offset": 257
                },
                {
                  "val": "\u0027CD+Chowk%2C+Sector+48%2C+Gurugram%2C+Haryana+122004%2C+India\u0027",
                  "offset": 274
                }
              ],
              "location": "steps.login.user_call_https_request_for_with_and_and_and_and_and_and_and_and(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11161000,
              "status": "passed"
            },
            "line": 22,
            "name": "I should see the success key value as \"true\" in the API response",
            "match": {
              "arguments": [
                {
                  "val": "\"true\"",
                  "offset": 38
                }
              ],
              "location": "steps.login.iShouldSeeTheSuccessKeyValueAsInTheAPIResponse(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@signup"
          }
        ]
      }
    ],
    "name": "Validating the app login flows",
    "description": "  Description: The purpose of this feature is to test the just login flow in the app",
    "id": "validating-the-app-login-flows",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/login.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-07-07T05:12:09.516Z",
        "before": [
          {
            "result": {
              "duration": 3336000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 11,
        "name": "verify if user is able to get the timeslots",
        "description": "",
        "id": "validating-the-route-search-results;verify-if-user-is-able-to-get-the-timeslots;;2",
        "after": [
          {
            "result": {
              "duration": 125000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 216470000,
              "status": "passed"
            },
            "line": 5,
            "name": "Given user call \"GET\" https request for \"/v4/routes/combinedSlots\" with \u002728.58368506583371\u0027 and \u002777.21241 725488308\u0027 and \u002728.56636061941184\u0027 and \u002777.20755711353199\u0027",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 16
                },
                {
                  "val": "\"/v4/routes/combinedSlots\"",
                  "offset": 40
                },
                {
                  "val": "\u002728.58368506583371\u0027",
                  "offset": 72
                },
                {
                  "val": "\u002777.21241 725488308\u0027",
                  "offset": 96
                },
                {
                  "val": "\u002728.56636061941184\u0027",
                  "offset": 121
                },
                {
                  "val": "\u002777.20755711353199\u0027",
                  "offset": 145
                }
              ],
              "location": "steps.Route.givenUserCallHttpsRequestForWithAndAndAnd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"message\" (class pojo.CombinedSlots), not marked as ignorable (3 known properties: \"cached\", \"success\", \"data\"])\n at [Source: (String)\"{\"message\": \"Invalid query_params: expected float (path \\\"fromLng\\\")\"}\"; line: 1, column: 14] (through reference chain: pojo.CombinedSlots[\"message\"])\n\tat com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)\n\tat com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:840)\n\tat com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1192)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1592)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1570)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:294)\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\n\tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4202)\n\tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3205)\n\tat com.fasterxml.jackson.databind.ObjectMapper$readValue$2.call(Unknown Source)\n\tat io.restassured.internal.path.json.mapping.JsonPathJackson2ObjectDeserializer.deserialize(JsonPathJackson2ObjectDeserializer.groovy:46)\n\tat io.restassured.path.json.mapping.JsonPathObjectDeserializer$deserialize.call(Unknown Source)\n\tat io.restassured.internal.mapping.Jackson2Mapper.deserialize(Jackson2Mapper.groovy:58)\n\tat io.restassured.mapper.ObjectMapper$deserialize$0.call(Unknown Source)\n\tat io.restassured.internal.mapping.ObjectMapping.parseWithJackson2(ObjectMapping.groovy:221)\n\tat io.restassured.internal.mapping.ObjectMapping$parseWithJackson2$1.callStatic(Unknown Source)\n\tat io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:58)\n\tat io.restassured.internal.mapping.ObjectMapping$deserialize$0.call(Unknown Source)\n\tat io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:224)\n\tat io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)\n\tat steps.Route.iShouldSeeMyPickupPointAsAndDropPointAs(Route.java:37)\n\tat âœ½.I should see my pickup point as \"SF Airport\" and drop point as \"SFHospital\"(file:///Users/admin/Desktop/restAssured/src/test/java/features/route.feature:6)\n",
              "duration": 13086000,
              "status": "failed"
            },
            "line": 6,
            "name": "I should see my pickup point as \"SF Airport\" and drop point as \"SFHospital\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SF Airport\"",
                  "offset": 32
                },
                {
                  "val": "\"SFHospital\"",
                  "offset": 63
                }
              ],
              "location": "steps.Route.iShouldSeeMyPickupPointAsAndDropPointAs(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34000,
              "status": "skipped"
            },
            "line": 7,
            "name": "If I have any slot operational \"true\" then I should see slotType \"BOOKABLE\".",
            "match": {
              "arguments": [
                {
                  "val": "\"true\"",
                  "offset": 31
                },
                {
                  "val": "\"BOOKABLE\"",
                  "offset": 65
                }
              ],
              "location": "steps.Route.ifIHaveAnySlotOperationalThenIShouldSeeSlotType(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000,
              "status": "skipped"
            },
            "line": 8,
            "name": "user should be having \"50 free rides\" with coupon code as \"AUTOMATION\".",
            "match": {
              "arguments": [
                {
                  "val": "\"50 free rides\"",
                  "offset": 22
                },
                {
                  "val": "\"AUTOMATION\"",
                  "offset": 58
                }
              ],
              "location": "steps.Route.userShouldBeHavingWithCouponCodeAs(java.lang.String,java.lang.String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@route"
          }
        ]
      }
    ],
    "name": "Validating the route search results",
    "description": "  Description: The purpose of this feature is to test the route and timeSlots",
    "id": "validating-the-route-search-results",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/route.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-07-07T05:12:09.785Z",
        "before": [
          {
            "result": {
              "duration": 10281000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 4,
        "name": "Verify if the place preference values for bing \u0026 google",
        "description": "",
        "id": "validating-the-stop-search-results;verify-if-the-place-preference-values-for-bing-\u0026-google",
        "after": [
          {
            "result": {
              "duration": 145000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 206076000,
              "status": "passed"
            },
            "line": 5,
            "name": "User call \"GET\" https request for \"/shuttl/places_preference\" call",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 10
                },
                {
                  "val": "\"/shuttl/places_preference\"",
                  "offset": 34
                }
              ],
              "location": "steps.StopSearch.user_call_https_request_for_call(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9772000,
              "status": "passed"
            },
            "line": 6,
            "name": "If search provider name is \"GOOGLE\" then triggered value should be \"10\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GOOGLE\"",
                  "offset": 27
                },
                {
                  "val": "\"10\"",
                  "offset": 67
                }
              ],
              "location": "steps.StopSearch.ifSearchProviderNameIsThenTriggeredValueShouldBe(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@stop"
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:10.029Z",
        "before": [
          {
            "result": {
              "duration": 2867000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 8,
        "name": "Verify if user is able to see the desired stops",
        "description": "",
        "id": "validating-the-stop-search-results;verify-if-user-is-able-to-see-the-desired-stops",
        "after": [
          {
            "result": {
              "duration": 156000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 335719000,
              "status": "passed"
            },
            "line": 9,
            "name": "User call \"GET\" https request for \"/v2/routes/search\" with String \"sfai\" and type as \"FROM\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 10
                },
                {
                  "val": "\"/v2/routes/search\"",
                  "offset": 34
                },
                {
                  "val": "\"sfai\"",
                  "offset": 66
                },
                {
                  "val": "\"FROM\"",
                  "offset": 85
                }
              ],
              "location": "steps.StopSearch.userCallHttpsRequestForWithStringAndTypeAs(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5791000,
              "status": "passed"
            },
            "line": 10,
            "name": "Results should contain \"SFHospital\" and \"SF Airport\"",
            "match": {
              "arguments": [
                {
                  "val": "\"SFHospital\"",
                  "offset": 23
                },
                {
                  "val": "\"SF Airport\"",
                  "offset": 40
                }
              ],
              "location": "steps.StopSearch.resultsShouldContainAnd(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Validating the stop search results",
    "description": "  Description: The purpose of this feature is to test the stop results and place preferences",
    "id": "validating-the-stop-search-results",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/stops.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-07-07T05:12:10.383Z",
        "before": [
          {
            "result": {
              "duration": 2861000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 4,
        "name": "Verify if user is able to see all the available offerings on the app",
        "description": "",
        "id": "validating-the-subscription-related-flows;verify-if-user-is-able-to-see-all-the-available-offerings-on-the-app",
        "after": [
          {
            "result": {
              "duration": 104000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 810200000,
              "status": "passed"
            },
            "line": 5,
            "name": "Given user call \"GET\" https request for \"/api/v2/subscriptions\" with origin and destination stop",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 16
                },
                {
                  "val": "\"/api/v2/subscriptions\"",
                  "offset": 40
                }
              ],
              "location": "steps.Subscription.givenUserCallHttpsRequestForWithOriginAndDestinationStop(java.lang.String,java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "origin_stop_id",
                  "destination_stop_id"
                ]
              },
              {
                "cells": [
                  "c8894713-07a8-4bb0-bb49-219f545bc377",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12512000,
              "status": "passed"
            },
            "line": 9,
            "name": "I should see the all given subscription in the API response",
            "match": {
              "location": "steps.Subscription.iShouldSeeTheAllGivenSubscriptionInTheAPIResponse(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "title"
                ]
              },
              {
                "cells": [
                  "Monthly Pass"
                ]
              },
              {
                "cells": [
                  "90 Rides"
                ]
              },
              {
                "cells": [
                  "30 Rides"
                ]
              },
              {
                "cells": [
                  "45 Rides"
                ]
              },
              {
                "cells": [
                  "15 Rides"
                ]
              },
              {
                "cells": [
                  "10 Rides"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@pass"
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:11.218Z",
        "before": [
          {
            "result": {
              "duration": 2223000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 18,
        "name": "Verify if user is able to see all the details related to particular offering",
        "description": "",
        "id": "validating-the-subscription-related-flows;verify-if-user-is-able-to-see-all-the-details-related-to-particular-offering",
        "after": [
          {
            "result": {
              "duration": 533000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 387209000,
              "status": "passed"
            },
            "line": 19,
            "name": "Given user call \"GET\" https request for \"/api/v2/subscriptions/4694105b-e0f8-476c-a6ea-4d6e5414331c\" with origin and destination stop",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 16
                },
                {
                  "val": "\"/api/v2/subscriptions/4694105b-e0f8-476c-a6ea-4d6e5414331c\"",
                  "offset": 40
                }
              ],
              "location": "steps.Subscription.givenUserCallHttpsRequestForWithOriginAndDestinationStop(java.lang.String,java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "origin_stop_id",
                  "destination_stop_id"
                ]
              },
              {
                "cells": [
                  "c8894713-07a8-4bb0-bb49-219f545bc377",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10588000,
              "status": "passed"
            },
            "line": 23,
            "name": "I should see the subscription details in the API response as below",
            "match": {
              "location": "steps.Subscription.iShouldSeeTheSubscriptionDetailsInTheAPIResponseAsBelow(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cta",
                  "amount",
                  "rides_count",
                  "validity_days",
                  "from_stop",
                  "to_stop"
                ]
              },
              {
                "cells": [
                  "CONTINUE TO PAY â‚¹1180",
                  "1180.0",
                  "10",
                  "30",
                  "c8894713-07a8-4bb0-bb49-219f545bc377",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4"
                ]
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:11.630Z",
        "before": [
          {
            "result": {
              "duration": 4161000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 28,
        "name": "Verify if user is able to purchase a shuttl pass",
        "description": "",
        "id": "validating-the-subscription-related-flows;verify-if-user-is-able-to-purchase-a-shuttl-pass",
        "after": [
          {
            "result": {
              "duration": 113000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 609313000,
              "status": "passed"
            },
            "line": 29,
            "name": "Given user call \"POST\" https request for \"/v4/subPlan/buySubscriptionPaymentMethods\" for selected subscription",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 16
                },
                {
                  "val": "\"/v4/subPlan/buySubscriptionPaymentMethods\"",
                  "offset": 41
                }
              ],
              "location": "steps.Subscription.givenUserCallHttpsRequestForForSelectedSubscription(java.lang.String,java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "fromId",
                  "subscriptionId",
                  "toId",
                  "twoWay"
                ]
              },
              {
                "cells": [
                  "c8894713-07a8-4bb0-bb49-219f545bc377",
                  "4694105b-e0f8-476c-a6ea-4d6e5414331c",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4",
                  "false"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 590153000,
              "status": "passed"
            },
            "line": 33,
            "name": "User call \"GET\" https request for \"/v3/wallet/balance\" for shuttl wallet",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 10
                },
                {
                  "val": "\"/v3/wallet/balance\"",
                  "offset": 34
                }
              ],
              "location": "steps.Subscription.userCallHttpsRequestForForShuttlWallet(java.lang.String,java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "wallet"
                ]
              },
              {
                "cells": [
                  "SHUTTL_WALLET"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1334155000,
              "status": "passed"
            },
            "line": 37,
            "name": "User call \"POST\" https request for \"/v4/subPlan/buy\" with body",
            "match": {
              "arguments": [
                {
                  "val": "\"POST\"",
                  "offset": 10
                },
                {
                  "val": "\"/v4/subPlan/buy\"",
                  "offset": 35
                }
              ],
              "location": "steps.Subscription.userCallHttpsRequestForWithBody(java.lang.String,java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "bookType",
                  "deductShuttlCashback",
                  "email",
                  "fromId",
                  "onlyAddOn",
                  "paymentViaShuttlWallet",
                  "selectTimeEnabled",
                  "subscriptionId",
                  "toId",
                  "twoWay",
                  "userFromLat",
                  "userFromLng",
                  "userFromName",
                  "userToLat",
                  "userToLng",
                  "userToName",
                  "wallet"
                ]
              },
              {
                "cells": [
                  "SELF_BOOK",
                  "true",
                  "jaisinghsodha27@gmail.com",
                  "c8894713-07a8-4bb0-bb49-219f545bc377",
                  "false",
                  "1180.0",
                  "false",
                  "4694105b-e0f8-476c-a6ea-4d6e5414331c",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4",
                  "true",
                  "0.0",
                  "0.0",
                  "SF Airport",
                  "0.0",
                  "0.0",
                  "5752b57f-fd85-4c3a-9f67-6b1f30e2e7d4",
                  "SHUTTL_WALLET"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11326000,
              "status": "passed"
            },
            "line": 41,
            "name": "I should see the message \"Successfully Purchased Shuttl Pass\" in response",
            "match": {
              "arguments": [
                {
                  "val": "\"Successfully Purchased Shuttl Pass\"",
                  "offset": 25
                }
              ],
              "location": "steps.Subscription.iShouldSeeTheMessageInResponse(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:14.186Z",
        "before": [
          {
            "result": {
              "duration": 7828000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 43,
        "name": "Verify if user is able to see his purchased offering on the app",
        "description": "",
        "id": "validating-the-subscription-related-flows;verify-if-user-is-able-to-see-his-purchased-offering-on-the-app",
        "after": [
          {
            "result": {
              "duration": 1105000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 341373000,
              "status": "passed"
            },
            "line": 44,
            "name": "User call \"GET\" https request for \"/api/v2/user_subscriptions\"",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 10
                },
                {
                  "val": "\"/api/v2/user_subscriptions\"",
                  "offset": 34
                }
              ],
              "location": "steps.Subscription.userCallHttpsRequestFor(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 308873000,
              "status": "passed"
            },
            "line": 45,
            "name": "User call \"GET\" https request for \"/api/v2/user_subscriptions/\" with userSubscription",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 10
                },
                {
                  "val": "\"/api/v2/user_subscriptions/\"",
                  "offset": 34
                }
              ],
              "location": "steps.Subscription.userCallHttpsRequestForWithUserSubscription(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15529000,
              "status": "passed"
            },
            "line": 47,
            "name": "I should see the userSubscription details as below in API response",
            "match": {
              "location": "steps.Subscription.iShouldSeeTheUserSubscriptionDetailsAsBelowInAPIResponse(io.cucumber.datatable.DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cta",
                  "from_stop",
                  "to_stop",
                  "sub_cta",
                  "applicability",
                  "renewable",
                  "state",
                  "subscription_id",
                  "RIDES REMAINING"
                ]
              },
              {
                "cells": [
                  "RENEW PASS",
                  "SFHospital",
                  "SF Airport",
                  "Carry forward your remaining rides",
                  "TWO_WAY",
                  "true",
                  "ACTIVE",
                  "4694105b-e0f8-476c-a6ea-4d6e5414331c",
                  "\u003ch\u003e 10\u003c/h\u003e/10"
                ]
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2020-07-07T05:12:14.871Z",
        "before": [
          {
            "result": {
              "duration": 2168000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.TestSetup()"
            }
          }
        ],
        "line": 51,
        "name": "Verify if user is able to cancel his purchased pass",
        "description": "",
        "id": "validating-the-subscription-related-flows;verify-if-user-is-able-to-cancel-his-purchased-pass",
        "after": [
          {
            "result": {
              "duration": 111000,
              "status": "passed"
            },
            "match": {
              "location": "steps.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 314032000,
              "status": "passed"
            },
            "line": 52,
            "name": "User call \"GET\" https request for \"/v3/sub/getRefundCategories\" with query params as userSubscription",
            "match": {
              "arguments": [
                {
                  "val": "\"GET\"",
                  "offset": 10
                },
                {
                  "val": "\"/v3/sub/getRefundCategories\"",
                  "offset": 34
                }
              ],
              "location": "steps.Subscription.userCallHttpsRequestForWithQueryParamsAsUserSubscription(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 249211000,
              "status": "passed"
            },
            "line": 53,
            "name": "User call \"Post\" https request for \"/v3/sub/refundSubscription\" with userSubscription \u0026 reasonid",
            "match": {
              "arguments": [
                {
                  "val": "\"Post\"",
                  "offset": 10
                },
                {
                  "val": "\"/v3/sub/refundSubscription\"",
                  "offset": 35
                }
              ],
              "location": "steps.Subscription.userCallHttpsRequestForWithUserSubscriptionReasonid(java.lang.String,java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8961000,
              "status": "passed"
            },
            "line": 54,
            "name": "I should see the refund success message \"The refund amount has been transferred to your wallet/account that was used for the transaction.\" in response",
            "match": {
              "arguments": [
                {
                  "val": "\"The refund amount has been transferred to your wallet/account that was used for the transaction.\"",
                  "offset": 40
                }
              ],
              "location": "steps.Subscription.iShouldSeeTheRefundSuccessMessageInResponse(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Validating the subscription related flows",
    "description": "  Description: The purpose of this feature is to test the pass listings and pass purchase/renew/cancel flow",
    "id": "validating-the-subscription-related-flows",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/subscription.feature",
    "tags": []
  }
]